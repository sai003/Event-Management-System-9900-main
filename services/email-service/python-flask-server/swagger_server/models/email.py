# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.receiver import Receiver
from swagger_server import util


class Email(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, email_subject: str=None, email_content: str=None, email_from: object=None, email_to: List[Receiver]=None):  # noqa: E501
        """Email - a model defined in Swagger

        :param email_subject: The email_subject of this Email.  # noqa: E501
        :type email_subject: str
        :param email_content: The email_content of this Email.  # noqa: E501
        :type email_content: str
        :param email_from: The email_from of this Email.  # noqa: E501
        :type email_from: object
        :param email_to: The email_to of this Email.  # noqa: E501
        :type email_to: List[Receiver]
        """
        self.swagger_types = {
            'email_subject': str,
            'email_content': str,
            'email_from': object,
            'email_to': List[Receiver]
        }

        self.attribute_map = {
            'email_subject': 'email_subject',
            'email_content': 'email_content',
            'email_from': 'email_from',
            'email_to': 'email_to'
        }

        self._email_subject = email_subject
        self._email_content = email_content
        self._email_from = email_from
        self._email_to = email_to

    @classmethod
    def from_dict(cls, dikt) -> 'Email':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Email of this Email.  # noqa: E501
        :rtype: Email
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_subject(self) -> str:
        """Gets the email_subject of this Email.


        :return: The email_subject of this Email.
        :rtype: str
        """
        return self._email_subject

    @email_subject.setter
    def email_subject(self, email_subject: str):
        """Sets the email_subject of this Email.


        :param email_subject: The email_subject of this Email.
        :type email_subject: str
        """

        self._email_subject = email_subject

    @property
    def email_content(self) -> str:
        """Gets the email_content of this Email.


        :return: The email_content of this Email.
        :rtype: str
        """
        return self._email_content

    @email_content.setter
    def email_content(self, email_content: str):
        """Sets the email_content of this Email.


        :param email_content: The email_content of this Email.
        :type email_content: str
        """

        self._email_content = email_content

    @property
    def email_from(self) -> object:
        """Gets the email_from of this Email.


        :return: The email_from of this Email.
        :rtype: object
        """
        return self._email_from

    @email_from.setter
    def email_from(self, email_from: object):
        """Sets the email_from of this Email.


        :param email_from: The email_from of this Email.
        :type email_from: object
        """

        self._email_from = email_from

    @property
    def email_to(self) -> List[Receiver]:
        """Gets the email_to of this Email.


        :return: The email_to of this Email.
        :rtype: List[Receiver]
        """
        return self._email_to

    @email_to.setter
    def email_to(self, email_to: List[Receiver]):
        """Sets the email_to of this Email.


        :param email_to: The email_to of this Email.
        :type email_to: List[Receiver]
        """

        self._email_to = email_to
